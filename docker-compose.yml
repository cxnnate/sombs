version: "3.8"

# Social Media Bot Sentiment - SoMBS

# a small system designed to understand how social media spambots affect the sentiment of a topic

services:

  frontend:
    container_name: frontend
    build: ./frontend/
    ports:
      - 8080:80
    volumes:
      - ./frontend/assets/css:/frontend/assets/css
      - ./frontend/components:/frontend/components
      - ./frontend/pages:/frontend/pages
      - ./frontend/static:/frontend/static
      - ./frontend/store:/frontend/store

  apis:
    container_name: apis
    build: ./apis/
    restart: always
    ports:
      - 8081:80
    
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    ports:
    - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=database
    volumes:
      - ./database/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
      - postgres:/var/lib/postgresql/data

  # zoo:
  #   container_name: zoo
  #   image: zookeeper:3.4.9
  #   hostname: zoo
  #   ports:
  #     - "3181:2181"
  #   environment: 
  #     ZOO_MY_ID: 1
  #     ZOO_PORT: 2181
  #     ZOO_SERVERS: server.1=zoo:2888:3888
  
  # kafka:
  #   container_name: kafka
  #   image: confluenctinc/cp-kafka:5.5.1
  #   hostname: kafka
  #   ports:
  #     -"19092:9092"
  #   depends_on: 
  #     zoo
  #   environment: 
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     KAFKA_INNER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
  #     KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092, LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:19092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
  #     KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"

volumes:
  postgres:

networks:
  default:
    name: sombs
    
